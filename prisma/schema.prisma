generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Users {
  id         String         @id @default(uuid())
  name       String
  password   String
  email      String         @unique
  phone      String
  isAdm      Boolean
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @default(now()) @updatedAt
  cart       Cart?
  sessions   UserSessions[]
  userEmails UserEmails[]
  userPhones UserPhones[]

  @@map("users")
}

model UserEmails {
  id     String @id @default(uuid())
  email  String
  UserId String
  user   Users  @relation(fields: [UserId], references: [id], onDelete: Cascade)

  @@map("users_emails")
}

model UserPhones {
  id     String @id @default(uuid())
  phone  String
  UserId String
  user   Users  @relation(fields: [UserId], references: [id], onDelete: Cascade)

  @@map("users_phones")
}

model UserSessions {
  id        String   @id @default(uuid())
  ip        String?
  type      String
  createdAt DateTime @default(now())
  UserId    String
  user      Users    @relation(fields: [UserId], references: [id], onDelete: Cascade)

  @@map("user_sessions")
}

model Cart {
  id          String @id @default(uuid())
  productId   String
  title       String
  price       String
  currency_id String
  permalink   String
  UserId      String @unique
  user        Users  @relation(fields: [UserId], references: [id], onDelete: Cascade)

  @@map("user_cart")
}
